schema {
    query: Query
    mutation: Mutation
}

type Book {
	id: ID!
    name: String!
	author: ID!
	borrowBy: ID!
    dueDate: String!
}

type Author {
	id: ID!
	name: String!
}

type User {
	id: ID!
	name: String!
	email: String!
	phone: String!
	address: String!
}

type Query {
    available(bookId: ID!): Boolean!
	getBookByName(bookName: String!): [Book]
	getBooksByAuthor(authorId: ID!): [Book]
	getAllAuthors: [Author]
	getAllBooks: [Book]
	getUserDetails(userId: ID!): User
	getBooksHoldByUserId(userId: ID!): [Book]
	getBooksHoldByUserName(userName: String!): [Book]
}

type Mutation {
	addUser(name: String!, email: String!,phone: String!, address: String!):User
	updateUser(userId:ID!, name: String, email: String,phone: String, address: String): User
	addAuthor(name: String!):Author
	addBook(name: String!, author:ID!): Book
	borrowBook(bookId:ID!, userId:ID!): Boolean!
	returnBook(bookId:ID!): Boolean!
}